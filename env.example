# Email Mass Sender - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
SECRET_KEY=your-very-secure-secret-key-change-this-in-production
DEBUG=False
HOST=127.0.0.1
PORT=8080

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# SQLite (default)
DATABASE_URL=sqlite:///email_sender.db

# PostgreSQL (for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/email_sender

# =============================================================================
# OPENAI CONFIGURATION (Optional - for AI features)
# =============================================================================
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini
OPENAI_MAX_TOKENS=200

# =============================================================================
# EMAIL VALIDATION CONFIGURATION (Optional - for contact processing)
# =============================================================================
# Debounce.io API key for email validation
# Get your API key from: https://debounce.io/
DEBOUNCE_API_KEY=your-debounce-api-key-here
DEBOUNCE_BATCH_SIZE=100
DEBOUNCE_TIMEOUT=30

# =============================================================================
# CONCURRENCY AND PERFORMANCE SETTINGS
# =============================================================================
# Maximum concurrent accounts sending emails
MAX_CONCURRENT_ACCOUNTS=200

# Maximum concurrent emails per provider
MAX_CONCURRENT_PER_PROVIDER=50

# Request timeout in seconds
REQUEST_TIMEOUT=30

# Number of retry attempts for failed sends
RETRY_ATTEMPTS=5

# Initial retry delay in seconds (exponential backoff)
RETRY_DELAY=1.0

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# Maximum requests per minute per provider
RATE_LIMIT_PER_MINUTE=100

# Burst limit for rate limiting
RATE_LIMIT_BURST=10

# =============================================================================
# FILE UPLOAD SETTINGS
# =============================================================================
# Maximum attachment size in bytes (25MB)
MAX_ATTACHMENT_SIZE=26214400

# Upload folder for attachments
UPLOAD_FOLDER=uploads

# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=txt,pdf,png,jpg,jpeg,gif,doc,docx,xls,xlsx,zip,mp4,mp3

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/email_sender.log

# =============================================================================
# OAUTH2.0 PROVIDER CONFIGURATIONS
# =============================================================================

# Microsoft Azure (Office365/Hotmail)
OFFICE365_CLIENT_ID=your-office365-client-id
OFFICE365_CLIENT_SECRET=your-office365-client-secret
OFFICE365_TENANT_ID=common
OFFICE365_REDIRECT_URI=http://localhost:8080/callback/office365

# Google Cloud Console (Gmail)
GMAIL_CLIENT_ID=your-gmail-client-id
GMAIL_CLIENT_SECRET=your-gmail-client-secret
GMAIL_REDIRECT_URI=http://localhost:8080/callback/gmail

# Yahoo Developer (Yahoo Mail)
YAHOO_CLIENT_ID=your-yahoo-client-id
YAHOO_CLIENT_SECRET=your-yahoo-client-secret
YAHOO_REDIRECT_URI=http://localhost:8080/callback/yahoo

# Hotmail/Outlook.com (uses Microsoft Graph)
HOTMAIL_CLIENT_ID=your-hotmail-client-id
HOTMAIL_CLIENT_SECRET=your-hotmail-client-secret
HOTMAIL_REDIRECT_URI=http://localhost:8080/callback/hotmail

# =============================================================================
# PRODUCTION SETTINGS (Uncomment for production)
# =============================================================================

# Use HTTPS in production
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# SESSION_COOKIE_HTTPONLY=True
# SESSION_COOKIE_SAMESITE=Lax

# Database connection pool settings
# DB_POOL_SIZE=20
# DB_MAX_OVERFLOW=30
# DB_POOL_TIMEOUT=30
# DB_POOL_RECYCLE=3600

# Redis for caching (optional)
# REDIS_URL=redis://localhost:6379/0

# Email notifications for errors
# ERROR_EMAIL_FROM=errors@yourdomain.com
# ERROR_EMAIL_TO=admin@yourdomain.com
# SMTP_HOST=smtp.yourdomain.com
# SMTP_PORT=587
# SMTP_USERNAME=your-smtp-username
# SMTP_PASSWORD=your-smtp-password

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# JWT secret for API tokens
# JWT_SECRET_KEY=your-jwt-secret-key

# Encryption key for sensitive data
# ENCRYPTION_KEY=your-32-character-encryption-key

# CORS settings
# CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# =============================================================================
# MONITORING AND ANALYTICS
# =============================================================================

# Sentry for error tracking (optional)
# SENTRY_DSN=your-sentry-dsn

# Google Analytics (optional)
# GA_TRACKING_ID=your-ga-tracking-id

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================

# Backup settings
# BACKUP_ENABLED=True
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30
# BACKUP_S3_BUCKET=your-backup-bucket
# BACKUP_S3_ACCESS_KEY=your-s3-access-key
# BACKUP_S3_SECRET_KEY=your-s3-secret-key

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique secret keys in production
# 3. Regularly rotate API keys and secrets
# 4. Monitor logs for security issues
# 5. Keep dependencies updated
# 6. Use HTTPS in production
# 7. Set up proper firewall rules
# 8. Regular database backups
# 9. Monitor system resources
# 10. Test disaster recovery procedures
